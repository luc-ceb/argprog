1.Definí el procedimiento DibujarLineaNegra3 que, como su nombre lo indica, dibuje una línea poniendo 3 bolitas negras consecutivas hacia el Este y dejando el cabezal donde comenzó. Invocalo en un program.

En la Biblioteca vas a encontrar el procedimiento VolverAtras. ¡Eso significa que podés invocarlo sin tener que definirlo!

procedure DibujarLineaNegra3() {
  repeat(2) {
    Poner(Negro)
    Mover(Este)
     }
  Poner(Negro)
  VolverAtras()
}

program {
  DibujarLineaNegra3()
}

2.Definí el procedimiento DibujarCuadradoNegroDeLado3 que invocando DibujarLineaNegra3 dibuje un cuadrado negro sobre el tablero. Invocalo en un program.
procedure DibujarCuadradoNegroDeLado3() {
  repeat(2) {
    DibujarLineaNegra3()
    Mover(Norte)  
  }
  DibujarLineaNegra3()
}

program {
  DibujarCuadradoNegroDeLado3()
}

3.Definí el procedimiento DibujarLineaVerde3 e invocalo en el program.
procedure DibujarLineaVerde3(){
  repeat(2) {
  Poner(Verde)
  Mover(Este)
     }
  Poner(Verde)
  VolverAtras() 
}

program {
  DibujarLineaVerde3()
  
}

4.Definí los procedimientos DibujarLineaRoja3 y DibujarLineaAzul3.
procedure DibujarLineaRoja3(){
  repeat(2) {
  Poner(Rojo)
  Mover(Este)
     }
  Poner(Rojo)
  VolverAtras() 
}

procedure DibujarLineaAzul3(){
  repeat(2) {
  Poner(Azul)
  Mover(Este)
     }
  Poner(Azul)
  VolverAtras() 
}

5.
procedure Poner3(color) {
  repeat(3) {
    Poner(color)
  }
}
program {
  Poner3(Negro)
  Poner3(Rojo)
}

6.Creá un programa que ponga tres bolitas verdes. No te olvides de invocar el procedimiento Poner3.
program{
  Poner3(Verde)
}

7.Definí el procedimiento DibujarLinea3 que reciba un color y dibuje una línea de ese color. Despreocupate por los programs para invocarlo con cada uno de los colores, van por nuestra parte.
procedure DibujarLinea3(color){
  repeat(2) {
    Poner(color)
    Mover(Este)    
  }
  Poner(color)
  VolverAtras()
}

8.Invocando DibujarLinea3, definí el procedimiento DibujarCuadradoDeLado3 que recibe un color y dibuja un cuadrado de 3x3 de ese color.
procedure DibujarCuadradoDeLado3(color){
  repeat(2){
  DibujarLinea3(color)
  Mover(Norte)
  }
  DibujarLinea3(color)  
}

9.Creá un program que invoque la nueva versión de DibujarLinea3 (no tenés que definirla, sólo invocarla) y dibuje un cuadrado multicolor como este:
program {
  DibujarLinea3(Verde, Este)
  Mover(Este)
  DibujarLinea3(Rojo, Norte)
  Mover(Norte)
  DibujarLinea3(Negro, Oeste)
  Mover(Oeste)
  DibujarLinea3(Azul, Sur)
}

10.Creá un programa cualquiera que invoque DibujarLinea3, pero esta vez intentá invocarlo con los argumentos invertidos.
program{
  DibujarLinea3(Norte,Rojo)
}

11.Creá un programa que invoque a DibujarLinea3 pero pasándole sólo un argumento.
program{
  DibujarLinea3(Norte)
}

12.
procedure Triada(color1,color2,color3){
  Poner(color1)
  Mover(Este)
  Poner(color2)
  Mover(Este)
  Poner(color3)
}

6-Practica
1.¿Te animás a definir el procedimiento Diagonal4AzulVolviendo? Este procedimiento debería hacer lo mismo que Diagonal4Azul, pero tiene que dejar el cabezal en la posición inicial. Recordá que podés invocar todo lo que está en la Biblioteca sin necesidad de volver a definirlo.
procedure Diagonal4AzulVolviendo(){
    Diagonal4Azul()
    repeat(4){
        Mover(Oeste)
        Mover(Sur)
    }
}

2.El procedimiento debe llamarse BandaDiagonal4. ¡Ojo! prestá atención a la posición final del cabezal.
procedure BandaDiagonal4(){
  repeat(3){
    Diagonal4AzulVolviendo()
    Mover(Norte)
    }
  repeat(3){
    Mover(Sur)
  }
  }
  
3.Definí el procedimiento PonerN(cantidad, color).
procedure PonerN(cantidad,color){
  repeat(cantidad){
    Poner(color)
  }
  
}

4.El objetivo, entonces, es definir un procedimiento DiaDeLaMemoria():

En la celda actual, poné 24 bolitas Azules, que representan el día.
En la celda inmediatamente al Este, poné 3 bolitas Verdes, que representan el mes.
En la celda a continuación, poné 1976 bolitas Negras, representando el año.

procedure DiaDeLaMemoria(){
  PonerN(24,Azul)
  Mover(Este)
  PonerN(3,Verde)
  Mover(Este)
  PonerN(1976,Negro)
  
}

5.Definí el procedimiento Fecha(dia, mes, anio), que recibe los tres valores correspondientes, y escribe la fecha que representan, de esta manera:

En la celda actual, tantas bolitas azules para representar el día.
En la celda inmediatamente al Este, tantas bolitas Verdes para representar el mes.
En la celda a continuación, tantas bolitas Negras para representar el año.

procedure Fecha(dia, mes, anio){
  PonerN(dia,Azul)
  Mover(Este)
  PonerN(mes,Verde)
  Mover(Este)
  PonerN(anio,Negro)

}

6.Definí un procedimiento MoverN(cantidad, direccion) que haga que el cabezal se desplace la cantidad especificada de veces en la dirección indicada.
procedure MoverN(cantidad, direccion){
  repeat(cantidad){
    Mover(direccion)
  }
}

7.Definí un procedimiento DibujarReloj(radio) que ponga los números del reloj como se indica arriba: alrededor del casillero actual. El tamaño del reloj se indica con el radio que recibís como parámetro: mientras más grande es el radio, más alejados están los números del centro.
procedure DibujarReloj(radio){
  MoverN(radio,Norte)
  PonerN(12,Rojo)
  MoverN(radio,Sur)
  MoverN(radio,Este)
  PonerN(3,Rojo)
  MoverN(radio,Oeste)
  MoverN(radio,Sur)
  PonerN(6,Rojo)
  MoverN(radio,Norte)
  MoverN(radio,Oeste)
  PonerN(9,Rojo)
  MoverN(radio,Este)
}

8.Definí el procedimiento LineaEstePesada(peso, color, longitud). Tené en cuenta que el cabezal debe regresar a la posición inicial. Para eso vas a tener que invocar MoverN.
procedure LineaEstePesada(peso, color, longitud){
  repeat(longitud){
    PonerN(peso,color)
    Mover(Este)
  }
  MoverN(longitud,Oeste)
  
}

9.Definí un procedimiento GuardaDe5(), que haga una "guarda" de 5 azulejos (como las que decoran las paredes). Cada azulejo está conformado por 1 bolita verde, 5 negras y 9 rojas.
procedure Azulejo(){
    PonerN(1,Verde)
    PonerN(5,Negro)
    PonerN(9,Rojo)
  }

procedure GuardaDe5(){
  repeat(4){
    Azulejo()
    Mover(Este)
  }
  Azulejo()
}



